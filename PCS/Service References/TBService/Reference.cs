//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18063
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace PCS.TBService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TBService.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ExcuteSql", ReplyAction="http://tempuri.org/IService1/ExcuteSqlResponse")]
        void ExcuteSql(string sSql);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ExcuteSql", ReplyAction="http://tempuri.org/IService1/ExcuteSqlResponse")]
        System.Threading.Tasks.Task ExcuteSqlAsync(string sSql);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IsHavePZ", ReplyAction="http://tempuri.org/IService1/IsHavePZResponse")]
        bool IsHavePZ(string YH_GUID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IsHavePZ", ReplyAction="http://tempuri.org/IService1/IsHavePZResponse")]
        System.Threading.Tasks.Task<bool> IsHavePZAsync(string YH_GUID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : PCS.TBService.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<PCS.TBService.IService1>, PCS.TBService.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void ExcuteSql(string sSql) {
            base.Channel.ExcuteSql(sSql);
        }
        
        public System.Threading.Tasks.Task ExcuteSqlAsync(string sSql) {
            return base.Channel.ExcuteSqlAsync(sSql);
        }
        
        public bool IsHavePZ(string YH_GUID) {
            return base.Channel.IsHavePZ(YH_GUID);
        }
        
        public System.Threading.Tasks.Task<bool> IsHavePZAsync(string YH_GUID) {
            return base.Channel.IsHavePZAsync(YH_GUID);
        }
    }
}
